# Each pull request that updates ASIM parsers triggers the script.
# The script runs ASIM Schema and Data testers on the "eco-connector-test" workspace.
name: Run ASIM testers on "ASIM-SchemaDataTester-GithubShared" workspace
on:
  pull_request_target:
    types: [opened, edited, reopened, synchronize, labeled]
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs: 
  run-asim-testers:
    runs-on: ubuntu-latest
    steps:
      - name: Set up GitHub CLI
        run: |
          # Add the GPG key for the GitHub CLI package repository
          # The key is public and used to verify the authenticity of the repository
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          # Add the GitHub CLI package repository
          sudo apt-add-repository https://cli.github.com/packages
          # Update the package list and install gh CLI
          sudo apt update
          sudo apt install gh -y

      - name: Check for modified files using GitHub API
        id: check_files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the list of modified files in the pull request
          pr_files=$(gh pr view ${{ github.event.pull_request.number }} --json files --jq '.files[].path')
          echo "Modified files: $pr_files"
          
          # Define the relevant paths regex
          relevant_paths='Parsers/ASimDns/Parsers/|Parsers/ASimNetworkSession/Parsers/|Parsers/ASimWebSession/Parsers/|Parsers/ASimProcessEvent/Parsers/|Parsers/ASimAuditEvent/Parsers/|Parsers/ASimAuthentication/Parsers/|Parsers/ASimFileEvent/Parsers/|Parsers/ASimRegistryEvent/Parsers/|Parsers/ASimUserManagement/Parsers/|Parsers/ASimDhcpEvent/Parsers/'

          # Check if any modified file matches the relevant paths
          if echo "$pr_files" | grep -Eq "$relevant_paths"; then
            echo "Relevant files modified."
            echo "run_tests=true" >> $GITHUB_ENV
          else
            echo "No relevant files modified."
            echo "run_tests=false" >> $GITHUB_ENV
          fi
      - name: Checkout pull request branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          persist-credentials: false
          fetch-depth: 0 # otherwise, there would be errors pushing refs to the destination repository.
      
      - name: Login to Azure Public Cloud with AzPowershell
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          enable-AzPSSession: true
          allow-no-subscriptions: true

      - name: Setup git config
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "<>"

      - name: Merge master into pull request branch
        run: |
          git merge origin/master
          Conflicts=$(git ls-files -u | wc -l)
          if [ "$Conflicts" -gt 0 ] ; then
            echo "There is a merge conflict. Aborting"
            git merge --abort
            exit 1
          fi

      - name: Run ASIM testers
        uses: azure/powershell@v2
        with:
          inlineScript: |
            & ".script/tests/asimParsersTest/runAsimTesters.ps1"
          azPSVersion: "latest"
          errorActionPreference: continue
          failOnStandardError: false
